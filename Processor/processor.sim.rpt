Simulator report for processor
Wed Dec 18 00:13:04 2013
Quartus II Version 9.0 Build 235 06/17/2009 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|content
  6. Coverage Summary
  7. Complete 1/0-Value Coverage
  8. Missing 1-Value Coverage
  9. Missing 0-Value Coverage
 10. Simulator INI Usage
 11. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 185 nodes    ;
; Simulation Coverage         ;       0.00 % ;
; Total Number of Transitions ; 0            ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; FLEX10K      ;
+-----------------------------+--------------+


+------------------------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                                             ;
+--------------------------------------------------------------------------------------------+-----------------------------------+---------------+
; Option                                                                                     ; Setting                           ; Default Value ;
+--------------------------------------------------------------------------------------------+-----------------------------------+---------------+
; Simulation mode                                                                            ; Functional                        ; Timing        ;
; Start time                                                                                 ; 0 ns                              ; 0 ns          ;
; Simulation results format                                                                  ; CVWF                              ;               ;
; Vector input source                                                                        ; Tests/controller_sig_ext_test.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On                                ; On            ;
; Check outputs                                                                              ; Off                               ; Off           ;
; Report simulation coverage                                                                 ; On                                ; On            ;
; Display complete 1/0 value coverage report                                                 ; On                                ; On            ;
; Display missing 1-value coverage report                                                    ; On                                ; On            ;
; Display missing 0-value coverage report                                                    ; On                                ; On            ;
; Detect setup and hold time violations                                                      ; Off                               ; Off           ;
; Detect glitches                                                                            ; Off                               ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off                               ; Off           ;
; Generate Signal Activity File                                                              ; Off                               ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off                               ; Off           ;
; Group bus channels in simulation results                                                   ; Off                               ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On                                ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE                        ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off                               ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off                               ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto                              ; Auto          ;
+--------------------------------------------------------------------------------------------+-----------------------------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------------+
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|content ;
+--------------------------------------------------------------------------+
Memory report data cannot be output to ASCII.
Please use Quartus II to view the memory report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;       0.00 % ;
; Total nodes checked                                 ; 185          ;
; Total output ports checked                          ; 192          ;
; Total output ports with complete 1/0-value coverage ; 0            ;
; Total output ports with no 1/0-value coverage       ; 192          ;
; Total output ports with no 1-value coverage         ; 192          ;
; Total output ports with no 0-value coverage         ; 192          ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+-------------------------------------------------+
; Complete 1/0-Value Coverage                     ;
+-----------+------------------+------------------+
; Node Name ; Output Port Name ; Output Port Type ;
+-----------+------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                          ;
+---------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                   ; Output Port Name                                                                                 ; Output Port Type ;
+---------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------+------------------+
; |processor|pc_clk                                                                           ; |processor|pc_clk                                                                                ; pin_out          ;
; |processor|clk                                                                              ; |processor|clk                                                                                   ; out              ;
; |processor|alu                                                                              ; |processor|alu                                                                                   ; pin_out          ;
; |processor|store                                                                            ; |processor|store                                                                                 ; pin_out          ;
; |processor|load                                                                             ; |processor|load                                                                                  ; pin_out          ;
; |processor|jump                                                                             ; |processor|jump                                                                                  ; pin_out          ;
; |processor|branch                                                                           ; |processor|branch                                                                                ; pin_out          ;
; |processor|alu_code[2]                                                                      ; |processor|alu_code[2]                                                                           ; pin_out          ;
; |processor|alu_code[1]                                                                      ; |processor|alu_code[1]                                                                           ; pin_out          ;
; |processor|alu_code[0]                                                                      ; |processor|alu_code[0]                                                                           ; pin_out          ;
; |processor|op_code[3]                                                                       ; |processor|op_code[3]                                                                            ; pin_out          ;
; |processor|op_code[2]                                                                       ; |processor|op_code[2]                                                                            ; pin_out          ;
; |processor|op_code[1]                                                                       ; |processor|op_code[1]                                                                            ; pin_out          ;
; |processor|op_code[0]                                                                       ; |processor|op_code[0]                                                                            ; pin_out          ;
; |processor|output[7]                                                                        ; |processor|output[7]                                                                             ; pin_out          ;
; |processor|output[6]                                                                        ; |processor|output[6]                                                                             ; pin_out          ;
; |processor|output[5]                                                                        ; |processor|output[5]                                                                             ; pin_out          ;
; |processor|output[4]                                                                        ; |processor|output[4]                                                                             ; pin_out          ;
; |processor|output[3]                                                                        ; |processor|output[3]                                                                             ; pin_out          ;
; |processor|output[2]                                                                        ; |processor|output[2]                                                                             ; pin_out          ;
; |processor|output[1]                                                                        ; |processor|output[1]                                                                             ; pin_out          ;
; |processor|output[0]                                                                        ; |processor|output[0]                                                                             ; pin_out          ;
; |processor|rd[2]                                                                            ; |processor|rd[2]                                                                                 ; pin_out          ;
; |processor|rd[1]                                                                            ; |processor|rd[1]                                                                                 ; pin_out          ;
; |processor|rd[0]                                                                            ; |processor|rd[0]                                                                                 ; pin_out          ;
; |processor|rs[2]                                                                            ; |processor|rs[2]                                                                                 ; pin_out          ;
; |processor|rs[1]                                                                            ; |processor|rs[1]                                                                                 ; pin_out          ;
; |processor|rs[0]                                                                            ; |processor|rs[0]                                                                                 ; pin_out          ;
; |processor|rt[2]                                                                            ; |processor|rt[2]                                                                                 ; pin_out          ;
; |processor|rt[1]                                                                            ; |processor|rt[1]                                                                                 ; pin_out          ;
; |processor|rt[0]                                                                            ; |processor|rt[0]                                                                                 ; pin_out          ;
; |processor|PC:inst3|pre_count[7]                                                            ; |processor|PC:inst3|pre_count[7]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[6]                                                            ; |processor|PC:inst3|pre_count[6]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[5]                                                            ; |processor|PC:inst3|pre_count[5]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[4]                                                            ; |processor|PC:inst3|pre_count[4]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[3]                                                            ; |processor|PC:inst3|pre_count[3]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[2]                                                            ; |processor|PC:inst3|pre_count[2]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[1]                                                            ; |processor|PC:inst3|pre_count[1]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[0]                                                            ; |processor|PC:inst3|pre_count[0]                                                                 ; regout           ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[15]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[15]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[14]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[14]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[13]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[13]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[12]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[12]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[11]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[11]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[10]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[10]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[9]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[9]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[8]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[8]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[7]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[7]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[6]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[6]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[5]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[5]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[4]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[4]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[3]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[3]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[2]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[2]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[1]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[1]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[0]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[0]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][15]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[15]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][14]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[14]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][13]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[13]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][12]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[12]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][11]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[11]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][10]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[10]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][9]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[9]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][8]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[8]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][7]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[7]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][6]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[6]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][5]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[5]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][4]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[4]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][3]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[3]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][2]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[2]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][1]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[1]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][0]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[0]                            ; dataout          ;
; |processor|controller:inst12|process_0~0                                                    ; |processor|controller:inst12|process_0~0                                                         ; out0             ;
; |processor|controller:inst12|process_0~1                                                    ; |processor|controller:inst12|process_0~1                                                         ; out0             ;
; |processor|controller:inst12|process_0~2                                                    ; |processor|controller:inst12|process_0~2                                                         ; out0             ;
; |processor|controller:inst12|alu                                                            ; |processor|controller:inst12|alu                                                                 ; out0             ;
; |processor|controller:inst12|process_0~4                                                    ; |processor|controller:inst12|process_0~4                                                         ; out0             ;
; |processor|controller:inst12|process_0~5                                                    ; |processor|controller:inst12|process_0~5                                                         ; out0             ;
; |processor|controller:inst12|process_0~6                                                    ; |processor|controller:inst12|process_0~6                                                         ; out0             ;
; |processor|controller:inst12|jump                                                           ; |processor|controller:inst12|jump                                                                ; out              ;
; |processor|controller:inst12|branch~0                                                       ; |processor|controller:inst12|branch~0                                                            ; out              ;
; |processor|controller:inst12|branch                                                         ; |processor|controller:inst12|branch                                                              ; out              ;
; |processor|controller:inst12|load~0                                                         ; |processor|controller:inst12|load~0                                                              ; out              ;
; |processor|controller:inst12|load~1                                                         ; |processor|controller:inst12|load~1                                                              ; out              ;
; |processor|controller:inst12|load                                                           ; |processor|controller:inst12|load                                                                ; out              ;
; |processor|controller:inst12|store~0                                                        ; |processor|controller:inst12|store~0                                                             ; out              ;
; |processor|controller:inst12|store~1                                                        ; |processor|controller:inst12|store~1                                                             ; out              ;
; |processor|controller:inst12|store~2                                                        ; |processor|controller:inst12|store~2                                                             ; out              ;
; |processor|controller:inst12|store                                                          ; |processor|controller:inst12|store                                                               ; out              ;
; |processor|clock_splitter:inst2|counter~0                                                   ; |processor|clock_splitter:inst2|counter~0                                                        ; out              ;
; |processor|clock_splitter:inst2|counter~1                                                   ; |processor|clock_splitter:inst2|counter~1                                                        ; out              ;
; |processor|clock_splitter:inst2|counter~2                                                   ; |processor|clock_splitter:inst2|counter~2                                                        ; out              ;
; |processor|clock_splitter:inst2|counter~3                                                   ; |processor|clock_splitter:inst2|counter~3                                                        ; out              ;
; |processor|clock_splitter:inst2|out_clk1~0                                                  ; |processor|clock_splitter:inst2|out_clk1~0                                                       ; out              ;
; |processor|clock_splitter:inst2|out_clk1~1                                                  ; |processor|clock_splitter:inst2|out_clk1~1                                                       ; out              ;
; |processor|clock_splitter:inst2|out_clk1                                                    ; |processor|clock_splitter:inst2|out_clk1                                                         ; regout           ;
; |processor|clock_splitter:inst2|counter[0]                                                  ; |processor|clock_splitter:inst2|counter[0]                                                       ; regout           ;
; |processor|clock_splitter:inst2|counter[1]                                                  ; |processor|clock_splitter:inst2|counter[1]                                                       ; regout           ;
; |processor|controller:inst12|Equal0~0                                                       ; |processor|controller:inst12|Equal0~0                                                            ; out0             ;
; |processor|controller:inst12|Equal1~0                                                       ; |processor|controller:inst12|Equal1~0                                                            ; out0             ;
; |processor|controller:inst12|Equal2~0                                                       ; |processor|controller:inst12|Equal2~0                                                            ; out0             ;
; |processor|controller:inst12|Equal3~0                                                       ; |processor|controller:inst12|Equal3~0                                                            ; out0             ;
; |processor|controller:inst12|Equal4~0                                                       ; |processor|controller:inst12|Equal4~0                                                            ; out0             ;
; |processor|controller:inst12|Equal5~0                                                       ; |processor|controller:inst12|Equal5~0                                                            ; out0             ;
; |processor|controller:inst12|Equal6~0                                                       ; |processor|controller:inst12|Equal6~0                                                            ; out0             ;
; |processor|controller:inst12|Equal7~0                                                       ; |processor|controller:inst12|Equal7~0                                                            ; out0             ;
; |processor|controller:inst12|Equal8~0                                                       ; |processor|controller:inst12|Equal8~0                                                            ; out0             ;
; |processor|controller:inst12|Equal9~0                                                       ; |processor|controller:inst12|Equal9~0                                                            ; out0             ;
; |processor|controller:inst12|Equal10~0                                                      ; |processor|controller:inst12|Equal10~0                                                           ; out0             ;
; |processor|controller:inst12|Equal11~0                                                      ; |processor|controller:inst12|Equal11~0                                                           ; out0             ;
; |processor|clock_splitter:inst2|Equal0~0                                                    ; |processor|clock_splitter:inst2|Equal0~0                                                         ; out0             ;
; |processor|clock_splitter:inst2|Equal1~0                                                    ; |processor|clock_splitter:inst2|Equal1~0                                                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[0]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[0]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[1]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[1]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[2]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[2]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[3]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[3]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[4]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[4]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[5]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[5]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[6]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[6]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[7]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[7]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[0]~0                      ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[0]~0                           ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[0]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[0]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]~0                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]~0                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~0                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~0                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~1                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~1                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~2                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~2                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~3                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~3                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[7]~1                      ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[7]~1                           ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[7]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[7]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[6]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[6]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[5]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[5]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[4]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[4]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[3]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[3]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[2]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[2]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[1]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[1]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[7]~1                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[7]~1                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[6]~2                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[6]~2                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[5]~3                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[5]~3                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[4]~4                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[4]~4                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]~5                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]~5                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]~6                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]~6                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]~7                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]~7                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[7]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[7]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[6]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[6]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[5]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[5]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[4]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[4]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~4                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~4                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~5                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~5                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~6                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~6                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~7                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~7                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~8                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~8                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~9                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~9                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~10                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~10                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~11                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~11                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~12                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~12                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~13                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~13                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~14                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~14                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~15                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~15                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~16                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~16                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~17                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~17                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~18                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~18                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~19                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~19                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~20                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~20                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~21                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~21                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~22                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~22                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~23                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~23                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~24                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~24                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~25                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~25                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~26                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~26                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~27                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~27                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~28                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~28                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~29                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~29                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~30                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~30                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~31                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~31                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[7] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[7]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[6]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[6]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[5]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[5]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[4]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[4]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]      ; sout             ;
+---------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                          ;
+---------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                   ; Output Port Name                                                                                 ; Output Port Type ;
+---------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------+------------------+
; |processor|pc_clk                                                                           ; |processor|pc_clk                                                                                ; pin_out          ;
; |processor|clk                                                                              ; |processor|clk                                                                                   ; out              ;
; |processor|alu                                                                              ; |processor|alu                                                                                   ; pin_out          ;
; |processor|store                                                                            ; |processor|store                                                                                 ; pin_out          ;
; |processor|load                                                                             ; |processor|load                                                                                  ; pin_out          ;
; |processor|jump                                                                             ; |processor|jump                                                                                  ; pin_out          ;
; |processor|branch                                                                           ; |processor|branch                                                                                ; pin_out          ;
; |processor|alu_code[2]                                                                      ; |processor|alu_code[2]                                                                           ; pin_out          ;
; |processor|alu_code[1]                                                                      ; |processor|alu_code[1]                                                                           ; pin_out          ;
; |processor|alu_code[0]                                                                      ; |processor|alu_code[0]                                                                           ; pin_out          ;
; |processor|op_code[3]                                                                       ; |processor|op_code[3]                                                                            ; pin_out          ;
; |processor|op_code[2]                                                                       ; |processor|op_code[2]                                                                            ; pin_out          ;
; |processor|op_code[1]                                                                       ; |processor|op_code[1]                                                                            ; pin_out          ;
; |processor|op_code[0]                                                                       ; |processor|op_code[0]                                                                            ; pin_out          ;
; |processor|output[7]                                                                        ; |processor|output[7]                                                                             ; pin_out          ;
; |processor|output[6]                                                                        ; |processor|output[6]                                                                             ; pin_out          ;
; |processor|output[5]                                                                        ; |processor|output[5]                                                                             ; pin_out          ;
; |processor|output[4]                                                                        ; |processor|output[4]                                                                             ; pin_out          ;
; |processor|output[3]                                                                        ; |processor|output[3]                                                                             ; pin_out          ;
; |processor|output[2]                                                                        ; |processor|output[2]                                                                             ; pin_out          ;
; |processor|output[1]                                                                        ; |processor|output[1]                                                                             ; pin_out          ;
; |processor|output[0]                                                                        ; |processor|output[0]                                                                             ; pin_out          ;
; |processor|rd[2]                                                                            ; |processor|rd[2]                                                                                 ; pin_out          ;
; |processor|rd[1]                                                                            ; |processor|rd[1]                                                                                 ; pin_out          ;
; |processor|rd[0]                                                                            ; |processor|rd[0]                                                                                 ; pin_out          ;
; |processor|rs[2]                                                                            ; |processor|rs[2]                                                                                 ; pin_out          ;
; |processor|rs[1]                                                                            ; |processor|rs[1]                                                                                 ; pin_out          ;
; |processor|rs[0]                                                                            ; |processor|rs[0]                                                                                 ; pin_out          ;
; |processor|rt[2]                                                                            ; |processor|rt[2]                                                                                 ; pin_out          ;
; |processor|rt[1]                                                                            ; |processor|rt[1]                                                                                 ; pin_out          ;
; |processor|rt[0]                                                                            ; |processor|rt[0]                                                                                 ; pin_out          ;
; |processor|PC:inst3|pre_count[7]                                                            ; |processor|PC:inst3|pre_count[7]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[6]                                                            ; |processor|PC:inst3|pre_count[6]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[5]                                                            ; |processor|PC:inst3|pre_count[5]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[4]                                                            ; |processor|PC:inst3|pre_count[4]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[3]                                                            ; |processor|PC:inst3|pre_count[3]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[2]                                                            ; |processor|PC:inst3|pre_count[2]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[1]                                                            ; |processor|PC:inst3|pre_count[1]                                                                 ; regout           ;
; |processor|PC:inst3|pre_count[0]                                                            ; |processor|PC:inst3|pre_count[0]                                                                 ; regout           ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[15]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[15]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[14]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[14]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[13]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[13]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[12]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[12]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[11]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[11]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[10]                               ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[10]                                    ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[9]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[9]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[8]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[8]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[7]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[7]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[6]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[6]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[5]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[5]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[4]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[4]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[3]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[3]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[2]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[2]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[1]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[1]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[0]                                ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|otri[0]                                     ; out              ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][15]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[15]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][14]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[14]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][13]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[13]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][12]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[12]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][11]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[11]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][10]             ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[10]                           ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][9]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[9]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][8]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[8]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][7]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[7]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][6]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[6]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][5]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[5]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][4]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[4]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][3]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[3]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][2]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[2]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][1]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[1]                            ; dataout          ;
; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|segment[0][0]              ; |processor|lpm_rom0:inst10|lpm_rom:lpm_rom_component|altrom:srom|q[0]                            ; dataout          ;
; |processor|controller:inst12|process_0~0                                                    ; |processor|controller:inst12|process_0~0                                                         ; out0             ;
; |processor|controller:inst12|process_0~1                                                    ; |processor|controller:inst12|process_0~1                                                         ; out0             ;
; |processor|controller:inst12|process_0~2                                                    ; |processor|controller:inst12|process_0~2                                                         ; out0             ;
; |processor|controller:inst12|alu                                                            ; |processor|controller:inst12|alu                                                                 ; out0             ;
; |processor|controller:inst12|process_0~4                                                    ; |processor|controller:inst12|process_0~4                                                         ; out0             ;
; |processor|controller:inst12|process_0~5                                                    ; |processor|controller:inst12|process_0~5                                                         ; out0             ;
; |processor|controller:inst12|process_0~6                                                    ; |processor|controller:inst12|process_0~6                                                         ; out0             ;
; |processor|controller:inst12|jump                                                           ; |processor|controller:inst12|jump                                                                ; out              ;
; |processor|controller:inst12|branch~0                                                       ; |processor|controller:inst12|branch~0                                                            ; out              ;
; |processor|controller:inst12|branch                                                         ; |processor|controller:inst12|branch                                                              ; out              ;
; |processor|controller:inst12|load~0                                                         ; |processor|controller:inst12|load~0                                                              ; out              ;
; |processor|controller:inst12|load~1                                                         ; |processor|controller:inst12|load~1                                                              ; out              ;
; |processor|controller:inst12|load                                                           ; |processor|controller:inst12|load                                                                ; out              ;
; |processor|controller:inst12|store~0                                                        ; |processor|controller:inst12|store~0                                                             ; out              ;
; |processor|controller:inst12|store~1                                                        ; |processor|controller:inst12|store~1                                                             ; out              ;
; |processor|controller:inst12|store~2                                                        ; |processor|controller:inst12|store~2                                                             ; out              ;
; |processor|controller:inst12|store                                                          ; |processor|controller:inst12|store                                                               ; out              ;
; |processor|clock_splitter:inst2|counter~0                                                   ; |processor|clock_splitter:inst2|counter~0                                                        ; out              ;
; |processor|clock_splitter:inst2|counter~1                                                   ; |processor|clock_splitter:inst2|counter~1                                                        ; out              ;
; |processor|clock_splitter:inst2|counter~2                                                   ; |processor|clock_splitter:inst2|counter~2                                                        ; out              ;
; |processor|clock_splitter:inst2|counter~3                                                   ; |processor|clock_splitter:inst2|counter~3                                                        ; out              ;
; |processor|clock_splitter:inst2|out_clk1~0                                                  ; |processor|clock_splitter:inst2|out_clk1~0                                                       ; out              ;
; |processor|clock_splitter:inst2|out_clk1~1                                                  ; |processor|clock_splitter:inst2|out_clk1~1                                                       ; out              ;
; |processor|clock_splitter:inst2|out_clk1                                                    ; |processor|clock_splitter:inst2|out_clk1                                                         ; regout           ;
; |processor|clock_splitter:inst2|counter[0]                                                  ; |processor|clock_splitter:inst2|counter[0]                                                       ; regout           ;
; |processor|clock_splitter:inst2|counter[1]                                                  ; |processor|clock_splitter:inst2|counter[1]                                                       ; regout           ;
; |processor|controller:inst12|Equal0~0                                                       ; |processor|controller:inst12|Equal0~0                                                            ; out0             ;
; |processor|controller:inst12|Equal1~0                                                       ; |processor|controller:inst12|Equal1~0                                                            ; out0             ;
; |processor|controller:inst12|Equal2~0                                                       ; |processor|controller:inst12|Equal2~0                                                            ; out0             ;
; |processor|controller:inst12|Equal3~0                                                       ; |processor|controller:inst12|Equal3~0                                                            ; out0             ;
; |processor|controller:inst12|Equal4~0                                                       ; |processor|controller:inst12|Equal4~0                                                            ; out0             ;
; |processor|controller:inst12|Equal5~0                                                       ; |processor|controller:inst12|Equal5~0                                                            ; out0             ;
; |processor|controller:inst12|Equal6~0                                                       ; |processor|controller:inst12|Equal6~0                                                            ; out0             ;
; |processor|controller:inst12|Equal7~0                                                       ; |processor|controller:inst12|Equal7~0                                                            ; out0             ;
; |processor|controller:inst12|Equal8~0                                                       ; |processor|controller:inst12|Equal8~0                                                            ; out0             ;
; |processor|controller:inst12|Equal9~0                                                       ; |processor|controller:inst12|Equal9~0                                                            ; out0             ;
; |processor|controller:inst12|Equal10~0                                                      ; |processor|controller:inst12|Equal10~0                                                           ; out0             ;
; |processor|controller:inst12|Equal11~0                                                      ; |processor|controller:inst12|Equal11~0                                                           ; out0             ;
; |processor|clock_splitter:inst2|Equal0~0                                                    ; |processor|clock_splitter:inst2|Equal0~0                                                         ; out0             ;
; |processor|clock_splitter:inst2|Equal1~0                                                    ; |processor|clock_splitter:inst2|Equal1~0                                                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[0]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[0]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[1]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[1]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[2]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[2]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[3]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[3]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[4]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[4]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[5]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[5]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[6]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[6]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[7]                                     ; |processor|addOne:inst6|lpm_add_sub:Add0|result_node[7]                                          ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[0]~0                      ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[0]~0                           ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[0]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[0]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]~0                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]~0                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~0                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~0                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~1                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~1                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~2                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~2                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~3                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~3                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[7]~1                      ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[7]~1                           ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[7]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[7]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[6]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[6]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[5]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[5]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[4]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[4]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[3]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[3]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[2]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[2]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[1]                        ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|datab_node[1]                             ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[7]~1                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[7]~1                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[6]~2                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[6]~2                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[5]~3                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[5]~3                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[4]~4                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[4]~4                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]~5                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]~5                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]~6                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]~6                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]~7                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]~7                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[7]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[7]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[6]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[6]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[5]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[5]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[4]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[4]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]                    ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]                         ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~4                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~4                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~5                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~5                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~6                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~6                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~7                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~7                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~8                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~8                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~9                                  ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~9                                       ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~10                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~10                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~11                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~11                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~12                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~12                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~13                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~13                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~14                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~14                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~15                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~15                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~16                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~16                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~17                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~17                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~18                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~18                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~19                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~19                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~20                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~20                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~21                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~21                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~22                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~22                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~23                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~23                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~24                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~24                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~25                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~25                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~26                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~26                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~27                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~27                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~28                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~28                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~29                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~29                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~30                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~30                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~31                                 ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|_~31                                      ; out0             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[7] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[7]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[6]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[6]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[5]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[5]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[4]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[4]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]      ; sout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]~COUT ; cout             ;
; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |processor|addOne:inst6|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]      ; sout             ;
+---------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.0 Build 235 06/17/2009 Service Pack 2 SJ Web Edition
    Info: Processing started: Wed Dec 18 00:13:04 2013
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off processor -c processor
Info: Using vector source file "Tests/controller_sig_ext_test.vwf"
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is       0.00 %
Info: Number of transitions in simulation is 0
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 159 megabytes
    Info: Processing ended: Wed Dec 18 00:13:04 2013
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


